* ERC-55 address checksum
:PROPERTIES:
:TOC: :include descendants
:END:

:CONTENTS:
- [[#concepts-and-purpose][Concepts and purpose]]
- [[#design-and-implementation][Design and implementation]]
- [[#testing-and-usage][Testing and usage]]
  - [[#using--address-checksum-and-address-verify-functions][Using  address checksum and address verify functions]]
  - [[#testing-address-checksum-and-address-verify-function][Testing address checksum and address verify function]]
:END:

** Concepts and purpose

[[https://eips.ethereum.org/EIPS/eip-55][ERC-55 mixed-case checksum address encoding]]

- ERC-55 address checksum :: The ERC-55 address checksum is a
  backward-compatible, mixed-case encoding of case-insensitive Ethereum
  addresses that incorporates a checksum into the now case-sensitive address by
  changing the capitalization of hex digit letters of the address. The address
  checksum conveys additional information without changing the semantic address
  value that is used to detect errors and protect against mistakes with the
  99.986% accuracy

** Design and implementation

- Address checksum :: The =address checksum= function encodes an address to
  incorporate an error detecting checksum. The address checksum function
  - Compute the keccak256 hash of the address converted to the lower case
  - Upper case each character of the address if the hex value of the
    corresponding character of the hash is greater than or equal to 8, leaving
    other characters of the address unchanged
  - Return the encoded mixed-case address
    #+BEGIN_SRC nushell
  export def "address checksum" []: string -> string {
    let addr = $in | split chars
    let hash = $in | str downcase | hash keccak256 | split chars
    $addr | zip $hash | each {
      let a = $in.0
      let h = $in.1 | into int --radix 16
      if ($h >= 8) { $a | str upcase } else { $a }
    } | str join
  }
    #+END_SRC
- Address verify :: The =address verify= function verifies that the encoded
  mixed-case address does not have errors. The address verify function
  - Compute the keccak256 hash of the address converted to the lower case
  - Check that each character of the encoded address is in the upper case if the
    hex value of the corresponding char of the hash is greater than or equal to
    8, and is in the lower case otherwise
  - Return true if the above conditions are hold for all characters of the
    encoded address, or false otherwise
    #+BEGIN_SRC nushell
  export def "address verify" []: string -> bool {
    let addr = $in | split chars
    let hash = $in | str downcase | hash keccak256 | split chars
    $addr | zip $hash | all {
      let a = $in.0
      let h = $in.1 | into int --radix 16
      if ($h >= 8) { $a =~ '[A-F0-9]' } else { $a =~ '[a-z0-9]' }
    }
  }
    #+END_SRC

** Testing and usage

*** Using  =address checksum= and =address verify= functions

- Generate a secp256k1 key pair
  #+BEGIN_SRC nushell
key generate --private key.pem --public pub.pem
# -----BEGIN EC PRIVATE KEY-----
# MHQCAQEEIN3E438V6ruPEYcTYhLy8tNtpND0DGuzvKJS3b8MIRNAoAcGBSuBBAAK
# oUQDQgAEKWo8tnTLqEMSBLq4lPU43dA0nGadeM0ANVpnC28oHtG9UduGSujB4wx4
# VA5dyFbf/QARQrnr0ff7lo7HbyvARQ==
# -----END EC PRIVATE KEY-----
# -----BEGIN PUBLIC KEY-----
# MFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEKWo8tnTLqEMSBLq4lPU43dA0nGadeM0A
# NVpnC28oHtG9UduGSujB4wx4VA5dyFbf/QARQrnr0ff7lo7HbyvARQ==
# -----END PUBLIC KEY-----
  #+END_SRC
- Print the secp256k1 key pair information
  #+BEGIN_SRC nushell
"key.pem" | open | key print
# ╭─────────┬──────────────────────────────────────────────────────────────────╮
# │ key     │ ddc4e37f15eabb8f1187136212f2f2d36da4d0f40c6bb3bca252ddbf0c211340 │
# │ pubx    │ 296a3cb674cba8431204bab894f538ddd0349c669d78cd00355a670b6f281ed1 │
# │ puby    │ bd51db864ae8c1e30c78540e5dc856dffd001142b9ebd1f7fb968ec76f2bc045 │
# │ address │ 4a8babaf85fef398358be49d48d9857ae9837010                         │
# ╰─────────┴──────────────────────────────────────────────────────────────────╯
  #+END_SRC
- Compute the Ethereum address from the public key
  #+BEGIN_SRC nushell
"key.pem" | open | key print | get address
# 4a8babaf85fef398358be49d48d9857ae9837010
  #+END_SRC
- Encode the Ethereum address and incorporate the error detecting checksum
  #+BEGIN_SRC nushell
"key.pem" | open | key print | get address | address checksum
# 4a8bAbaf85fEF398358Be49d48d9857Ae9837010
  #+END_SRC
- Verify that the encoded Ethereum address does not have errors with the 99.986%
  accuracy
  #+BEGIN_SRC nushell
"key.pem" | open | key print | get address | address checksum | address verify
# true
  #+END_SRC

*** Testing =address checksum= and =address verify= function

Test the =address checksum= and the =address verify= functions
  #+BEGIN_SRC nushell
./wallet-test.nu
  #+END_SRC
